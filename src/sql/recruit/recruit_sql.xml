<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="recruit">
    <resultMap type="com.spring.recruit.vo.RecruitVo" id="recruitResult">
    	<id property="seq" 	column="SEQ"/>
    	<result property="name" 	column="NAME"/>
    	<result property="birth" 	column="BIRTH"/>
    	<result property="gender" 	column="GENDER"/>
    	<result property="phone" column="PHONE"/>
    	<result property="email" column="EMAIL"/>
    	<result property="addr" column="ADDR"/>
    	<result property="location" column="LOCATION"/>
    	<result property="workType" column="WORK_TYPE"/>
    	<result property="submit" column="SUBMIT"/>
    	<collection property="educationList" resultMap="educationResult"></collection>
    	<collection property="careerList" resultMap="careerResult"></collection>
    	<collection property="certificateList" resultMap="certificateResult"></collection>
    </resultMap>
    
	<!-- EducationVo ResultMap -->
	<resultMap type="com.spring.recruit.vo.EducationVo" id="educationResult">
	    <id 	property="eduSeq" column="EDU_SEQ"/>
	    <result	property="seq" column="SEQ"/>
	    <result property="schoolName" column="SCHOOL_NAME"/>
	    <result property="division" column="DIVISION"/>
	    <result property="startPeriod" column="START_PERIOD"/>
	    <result property="endPeriod" column="END_PERIOD"/>
	    <result property="major" column="MAJOR"/>
	    <result property="grade" column="GRADE"/>
	    <result property="location" column="EDU_LOCATION"/>
	</resultMap>
	
    <!-- CareerVo ResultMap -->
	<resultMap type="com.spring.recruit.vo.CareerVo" id="careerResult">
	    <id 	property="carSeq" column="CAR_SEQ"/>
	    <result property="seq" column="SEQ"/>
	    <result property="compName" column="COMP_NAME"/>
	    <result property="location" column="CAR_LOCATION"/>
	    <result property="startPeriod" column="CAR_START_PERIOD"/>
	    <result property="endPeriod" column="CAR_END_PERIOD"/>
	    <result property="task" column="TASK"/>
	    <result property="salary" column="SALARY"/>
	</resultMap>
	
	<!-- CertificateVo ResultMap -->
	<resultMap type="com.spring.recruit.vo.CertificateVo" id="certificateResult">
	    <id		property="certSeq" column="CERT_SEQ"/>
	    <result property="seq" column="SEQ"/>
	    <result property="qualifiName" column="QUALIFI_NAME"/>
	    <result property="acquDate" column="ACQU_DATE"/>
	    <result property="organizeName" column="ORGANIZE_NAME"/>
	</resultMap>

    <!-- BOARD_NUM 채번 시 COALESCE 함수로 null을 1로 변환 (게시글 1개도 없는 경우)-->
    <insert id="insertOrUpdateRecruit"  parameterType="com.spring.recruit.vo.RecruitVo">
    	<selectKey keyProperty="seq" order="BEFORE" resultType="String" >
    		SELECT COALESCE(
           		(
           		SELECT 
           			SEQ 
           		FROM 
           			RECRUIT 
         		WHERE 
         			NAME = #{name} 
        		AND 
        			PHONE = #{phone}
       			),(
       			SELECT 
       				COALESCE(TO_CHAR(MAX(TO_NUMBER(SEQ)+1)),'1') 
      			FROM 
      				RECRUIT)
			       ) 
			FROM DUAL
    	</selectKey>
	
	BEGIN
	
	    MERGE INTO
    			RECRUIT R
	    	USING DUAL ON(
	    			R.SEQ = #{seq}	
	    		)    			
		WHEN MATCHED THEN
				UPDATE
					SET
						BIRTH		=	#{birth},
						GENDER		=	#{gender},
						PHONE		=	#{phone},
						EMAIL		=	#{email},
						ADDR		=	#{addr},
						LOCATION	= 	#{location},
						WORK_TYPE	=	#{workType},
						SUBMIT		=	'N'			
  		WHEN	NOT MATCHED THEN
  				INSERT
  					(SEQ, NAME, BIRTH, GENDER, PHONE, EMAIL, ADDR, LOCATION, WORK_TYPE, SUBMIT)
 				VALUES
 					(#{seq}, #{name}, #{birth}, #{gender}, #{phone}, #{email}, #{addr}, #{location}, #{workType}, 'N');
	    
 	    DELETE 
	    	FROM
	    		EDUCATION
    		WHERE
    			SEQ = #{seq};
	    DELETE 
	    	FROM
	    		CAREER
    		WHERE
    			SEQ = #{seq};
	    DELETE 
	    	FROM
	    		CERTIFICATE
    		WHERE
    			SEQ = #{seq};
   		
		INSERT ALL INTO
		EDUCATION
				(
				SEQ,
				EDU_SEQ,
				SCHOOL_NAME,
				DIVISION,
				START_PERIOD,
				END_PERIOD,
				MAJOR,
				GRADE,
				LOCATION
				)
  				<foreach collection="educationList" item="education" separator="UNION ALL" open="" close=";">
        		SELECT 
	        		#{seq} AS SEQ,
	        		#{education.eduSeq} AS EDU_SEQ,
	        		#{education.schoolName} AS SCHOOL_NAME,
	        		#{education.division} AS DIVISION,
	        		#{education.startPeriod} AS START_PERIOD,
	        		#{education.endPeriod} AS END_PERIOD,
	        		#{education.major} AS MAJOR,
	        		#{education.grade} AS GRADE,
	        		#{education.location} AS LOCATION 
        		FROM 
        			DUAL</foreach>
		INSERT ALL INTO 
		CAREER
				(
				SEQ,
				CAR_SEQ,
				COMP_NAME,
				LOCATION,
				START_PERIOD,
				END_PERIOD,
				TASK
				)
  				<foreach collection="careerList" item="career" separator="UNION ALL" open="" close=";">
        		SELECT 
	        		#{seq} AS SEQ,
	        		#{career.carSeq} AS CAR_SEQ,
	        		#{career.compName} AS COMP_NAME,
	        		#{career.location} AS LOCATION,
	        		#{career.startPeriod} AS START_PERIOD,
	        		#{career.endPeriod} AS END_PERIOD,
	        		#{career.task} AS TASK
        		FROM 
        			DUAL</foreach>
		INSERT ALL INTO 
		CERTIFICATE
			(
				SEQ,
				CERT_SEQ,
				QUALIFI_NAME,
				ACQU_DATE,
				ORGANIZE_NAME
			)
  				<foreach collection="certificateList" item="certificate" separator="UNION ALL" open="" close=";">
        		SELECT 
        			#{seq} AS SEQ,
        			#{certificate.certSeq} AS CERT_SEQ,
        			#{certificate.qualifiName} AS QUALIFI_NAME,
        			#{certificate.acquDate} AS ACQU_DATE,
        			#{certificate.organizeName} AS ORGANIZE_NAME 
        		FROM 
        			DUAL</foreach>
	END;
    </insert>
	
	<!-- Mapper XML 파일의 SELECT 쿼리 -->
<select id="selectRecruit" parameterType="com.spring.recruit.vo.RecruitVo" resultMap="recruitResult">
    SELECT
        R.SEQ,
        R.NAME,
        R.BIRTH,
        R.GENDER,
        R.PHONE,
        R.EMAIL,
        R.ADDR,
        R.LOCATION,
        R.WORK_TYPE,
        R.SUBMIT,
        EDU.EDU_SEQ,
        EDU.SCHOOL_NAME,
        EDU.DIVISION,
        EDU.START_PERIOD,
        EDU.END_PERIOD,
        EDU.MAJOR,
        EDU.GRADE,
        EDU.LOCATION AS EDU_LOCATION,
        CAR.CAR_SEQ,
        CAR.COMP_NAME,
        CAR.LOCATION AS CAR_LOCATION,
        CAR.START_PERIOD AS CAR_START_PERIOD,
        CAR.END_PERIOD AS CAR_END_PERIOD,
        CAR.TASK,
        CAR.SALARY,
        CERT.CERT_SEQ,
        CERT.QUALIFI_NAME,
        CERT.ACQU_DATE,
        CERT.ORGANIZE_NAME
    FROM
        RECRUIT R
    LEFT JOIN
        EDUCATION EDU ON R.SEQ = EDU.SEQ
    LEFT JOIN
        CAREER CAR ON R.SEQ = CAR.SEQ
    LEFT JOIN
        CERTIFICATE CERT ON R.SEQ = CERT.SEQ
    WHERE
        R.SEQ = (
            SELECT COALESCE(
                (SELECT SEQ FROM RECRUIT WHERE NAME = #{name} AND PHONE = #{phone}),
               ''
            ) FROM DUAL
        )
</select>
	
</mapper>
